{"ast":null,"code":"import moment from \"moment\";\nexport const checkNameMatch = (obj, userObj) => {\n  const regex = new RegExp(`\\\\b${userObj.name}\\\\b`, \"i\");\n  const [, lastName] = obj.name.match(/(.*),\\s*(.*)/);\n  return regex.test(lastName);\n};\nexport const checkDetails = (mockDB, userObj) => {\n  //check all users in mockdb to see if any match the userObj exactly\n  const matchingObj = mockDB.find(obj => obj.nhsNumber === parseInt(userObj.nhsNumber) && checkNameMatch(obj, userObj) && obj.born === userObj.born);\n\n  //if all matching but one is under 18 then tell them theyre too young, if not then return success\n  if (matchingObj) {\n    const age = calculateAge(matchingObj.born);\n    if (age < 18) {\n      return \"You are not eligible for this service\";\n    } else {\n      return \"Success\";\n    }\n  } else {\n    return \"Your details could not be found\";\n  }\n};\nexport const calculateAge = birthday => {\n  const dob = moment(birthday, \"DD/MM/YYYY\");\n  const now = moment();\n  return now.diff(dob, \"years\");\n};","map":{"version":3,"names":["moment","checkNameMatch","obj","userObj","regex","RegExp","name","lastName","match","test","checkDetails","mockDB","matchingObj","find","nhsNumber","parseInt","born","age","calculateAge","birthday","dob","now","diff"],"sources":["/Users/jonno/Projects/lifestyle-checker/src/utils/utils.js"],"sourcesContent":["import moment from \"moment\";\n\nexport const checkNameMatch = (obj, userObj) => {\n  const regex = new RegExp(`\\\\b${userObj.name}\\\\b`, \"i\");\n  const [, lastName] = obj.name.match(/(.*),\\s*(.*)/);\n  return regex.test(lastName);\n};\n\nexport const checkDetails = (mockDB, userObj) => {\n  //check all users in mockdb to see if any match the userObj exactly\n  const matchingObj = mockDB.find(\n    (obj) =>\n      obj.nhsNumber === parseInt(userObj.nhsNumber) &&\n      checkNameMatch(obj, userObj) &&\n      obj.born === userObj.born\n  );\n\n  //if all matching but one is under 18 then tell them theyre too young, if not then return success\n  if (matchingObj) {\n    const age = calculateAge(matchingObj.born);\n    if (age < 18) {\n      return \"You are not eligible for this service\";\n    } else {\n      return \"Success\";\n    }\n  } else {\n    return \"Your details could not be found\";\n  }\n};\n\nexport const calculateAge = (birthday) => {\n  const dob = moment(birthday, \"DD/MM/YYYY\");\n  const now = moment();\n  return now.diff(dob, \"years\");\n};\n"],"mappings":"AAAA,OAAOA,MAAM,MAAM,QAAQ;AAE3B,OAAO,MAAMC,cAAc,GAAGA,CAACC,GAAG,EAAEC,OAAO,KAAK;EAC9C,MAAMC,KAAK,GAAG,IAAIC,MAAM,CAAE,MAAKF,OAAO,CAACG,IAAK,KAAI,EAAE,GAAG,CAAC;EACtD,MAAM,GAAGC,QAAQ,CAAC,GAAGL,GAAG,CAACI,IAAI,CAACE,KAAK,CAAC,cAAc,CAAC;EACnD,OAAOJ,KAAK,CAACK,IAAI,CAACF,QAAQ,CAAC;AAC7B,CAAC;AAED,OAAO,MAAMG,YAAY,GAAGA,CAACC,MAAM,EAAER,OAAO,KAAK;EAC/C;EACA,MAAMS,WAAW,GAAGD,MAAM,CAACE,IAAI,CAC5BX,GAAG,IACFA,GAAG,CAACY,SAAS,KAAKC,QAAQ,CAACZ,OAAO,CAACW,SAAS,CAAC,IAC7Cb,cAAc,CAACC,GAAG,EAAEC,OAAO,CAAC,IAC5BD,GAAG,CAACc,IAAI,KAAKb,OAAO,CAACa,IAAI,CAC5B;;EAED;EACA,IAAIJ,WAAW,EAAE;IACf,MAAMK,GAAG,GAAGC,YAAY,CAACN,WAAW,CAACI,IAAI,CAAC;IAC1C,IAAIC,GAAG,GAAG,EAAE,EAAE;MACZ,OAAO,uCAAuC;IAChD,CAAC,MAAM;MACL,OAAO,SAAS;IAClB;EACF,CAAC,MAAM;IACL,OAAO,iCAAiC;EAC1C;AACF,CAAC;AAED,OAAO,MAAMC,YAAY,GAAIC,QAAQ,IAAK;EACxC,MAAMC,GAAG,GAAGpB,MAAM,CAACmB,QAAQ,EAAE,YAAY,CAAC;EAC1C,MAAME,GAAG,GAAGrB,MAAM,EAAE;EACpB,OAAOqB,GAAG,CAACC,IAAI,CAACF,GAAG,EAAE,OAAO,CAAC;AAC/B,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}