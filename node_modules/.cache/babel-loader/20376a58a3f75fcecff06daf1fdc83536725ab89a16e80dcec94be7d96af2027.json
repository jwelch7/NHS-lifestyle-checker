{"ast":null,"code":"// import axios from \"axios\";\n// const API_KEY = process.env.REACT_APP_SUBSCRIPTION_KEY;\n\n// export const checkPatientDetails = (nhsNumber) => {\n//   const url = `https://al-tech-test-apim.azure-api.net/tech-test/t2/patients/${nhsNumber}`;\n//   return axios\n//     .get(url, {\n//       headers: {\n//         \"Ocp-Apim-Subscription-Key\": API_KEY,\n//         \"Access-Control-Allow-Origin\": \"*\",\n//         \"Access-Control-Allow-Methods\": \"GET, POST, OPTIONS\",\n//       },\n//     })\n//     .catch((e) => {\n//       console.log(e, \"!!!!!\");\n//     });\n// };\n\n// import axios from \"axios\";\n// const API_KEY = process.env.REACT_APP_SUBSCRIPTION_KEY;\n\n// export const checkPatientDetails = (nhsNumber) => {\n//   const url = `https://cors-anywhere.herokuapp.com/https://al-tech-test-apim.azure-api.net/tech-test/t2/patients/${nhsNumber}`;\n//   return axios\n//     .get(url, {\n//       headers: {\n//         \"Ocp-Apim-Subscription-Key\": API_KEY,\n//       },\n//     })\n//     .catch((e) => {\n//       console.log(e, \"!!!!!\");\n//     });\n// };\n\nimport axios from \"axios\";\nconst corsProxyUrl = \"https://crossorigin.me/\";\nconst apiUrl = \"https://al-tech-test-apim.azure-api.net/tech-test/t2/patients/\";\nconst API_KEY = process.env.REACT_APP_SUBSCRIPTION_KEY;\nexport const checkPatientDetails = nhsNumber => {\n  const url = `${corsProxyUrl}${apiUrl}${nhsNumber}`;\n  return axios.get(url, {\n    headers: {\n      \"Ocp-Apim-Subscription-Key\": API_KEY\n    }\n  });\n};\n\n//please explain in simple terms what a cors proxy service is and how it is used\n// CORS (Cross-Origin Resource Sharing) is a security feature built into modern web browsers that prevents web pages from making requests to resources on different domains, unless the server explicitly allows it.\n\n// A CORS proxy is a server that acts as an intermediary between a web page and a remote server, allowing the web page to make requests to the remote server even if it's on a different domain. When you use a CORS proxy, your request is sent to the proxy server, which then forwards the request to the remote server on your behalf. The response from the remote server is then sent back to the proxy server, which adds the necessary CORS headers to the response before sending it back to your web page.\n\n// In simple terms, using a CORS proxy is like asking a friend to make a request on your behalf to a remote server that you're not allowed to talk to directly. Your friend makes the request for you, and then gives you back the response, so that you can see the data you wanted.\n\n// In practice, you can use a CORS proxy by adding the proxy server's URL to the beginning of the original API URL in your code, and then making the request as you normally would with axios or another HTTP client library. The proxy server will handle the CORS headers for you, so that you can receive the response from the remote server without any errors.","map":{"version":3,"names":["axios","corsProxyUrl","apiUrl","API_KEY","process","env","REACT_APP_SUBSCRIPTION_KEY","checkPatientDetails","nhsNumber","url","get","headers"],"sources":["/Users/jonno/Projects/lifestyle-checker/src/utils/api.js"],"sourcesContent":["// import axios from \"axios\";\n// const API_KEY = process.env.REACT_APP_SUBSCRIPTION_KEY;\n\n// export const checkPatientDetails = (nhsNumber) => {\n//   const url = `https://al-tech-test-apim.azure-api.net/tech-test/t2/patients/${nhsNumber}`;\n//   return axios\n//     .get(url, {\n//       headers: {\n//         \"Ocp-Apim-Subscription-Key\": API_KEY,\n//         \"Access-Control-Allow-Origin\": \"*\",\n//         \"Access-Control-Allow-Methods\": \"GET, POST, OPTIONS\",\n//       },\n//     })\n//     .catch((e) => {\n//       console.log(e, \"!!!!!\");\n//     });\n// };\n\n// import axios from \"axios\";\n// const API_KEY = process.env.REACT_APP_SUBSCRIPTION_KEY;\n\n// export const checkPatientDetails = (nhsNumber) => {\n//   const url = `https://cors-anywhere.herokuapp.com/https://al-tech-test-apim.azure-api.net/tech-test/t2/patients/${nhsNumber}`;\n//   return axios\n//     .get(url, {\n//       headers: {\n//         \"Ocp-Apim-Subscription-Key\": API_KEY,\n//       },\n//     })\n//     .catch((e) => {\n//       console.log(e, \"!!!!!\");\n//     });\n// };\n\nimport axios from \"axios\";\n\nconst corsProxyUrl = \"https://crossorigin.me/\";\nconst apiUrl = \"https://al-tech-test-apim.azure-api.net/tech-test/t2/patients/\";\n\nconst API_KEY = process.env.REACT_APP_SUBSCRIPTION_KEY;\n\nexport const checkPatientDetails = (nhsNumber) => {\n  const url = `${corsProxyUrl}${apiUrl}${nhsNumber}`;\n  return axios.get(url, {\n    headers: { \"Ocp-Apim-Subscription-Key\": API_KEY },\n  });\n};\n\n//please explain in simple terms what a cors proxy service is and how it is used\n// CORS (Cross-Origin Resource Sharing) is a security feature built into modern web browsers that prevents web pages from making requests to resources on different domains, unless the server explicitly allows it.\n\n// A CORS proxy is a server that acts as an intermediary between a web page and a remote server, allowing the web page to make requests to the remote server even if it's on a different domain. When you use a CORS proxy, your request is sent to the proxy server, which then forwards the request to the remote server on your behalf. The response from the remote server is then sent back to the proxy server, which adds the necessary CORS headers to the response before sending it back to your web page.\n\n// In simple terms, using a CORS proxy is like asking a friend to make a request on your behalf to a remote server that you're not allowed to talk to directly. Your friend makes the request for you, and then gives you back the response, so that you can see the data you wanted.\n\n// In practice, you can use a CORS proxy by adding the proxy server's URL to the beginning of the original API URL in your code, and then making the request as you normally would with axios or another HTTP client library. The proxy server will handle the CORS headers for you, so that you can receive the response from the remote server without any errors.\n"],"mappings":"AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,YAAY,GAAG,yBAAyB;AAC9C,MAAMC,MAAM,GAAG,gEAAgE;AAE/E,MAAMC,OAAO,GAAGC,OAAO,CAACC,GAAG,CAACC,0BAA0B;AAEtD,OAAO,MAAMC,mBAAmB,GAAIC,SAAS,IAAK;EAChD,MAAMC,GAAG,GAAI,GAAER,YAAa,GAAEC,MAAO,GAAEM,SAAU,EAAC;EAClD,OAAOR,KAAK,CAACU,GAAG,CAACD,GAAG,EAAE;IACpBE,OAAO,EAAE;MAAE,2BAA2B,EAAER;IAAQ;EAClD,CAAC,CAAC;AACJ,CAAC;;AAED;AACA;;AAEA;;AAEA;;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}