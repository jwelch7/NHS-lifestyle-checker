{"ast":null,"code":"var _jsxFileName = \"/Users/jonno/Projects/lifestyle-checker/src/components/Login.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { checkDetails } from \"../utils/utils\";\nimport { useNavigate } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { checkPatientDetails } from \"../utils/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FormContainer = styled.div`\n  border: 1px solid #1978c8;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  font-family: Frutiger W01, Arial, Sans-serif;\n  background-color: #f0f4f5;\n`;\n_c = FormContainer;\nconst FormInput = styled.div`\n  display: contents;\n`;\n_c2 = FormInput;\nconst ButtonContainer = styled.button`\n  background-color: #007f3b;\n  color: white;\n  border-radius: 4px;\n  font-weight: 600;\n  box-shadow: 0 1px #00401e;\n  width: 150px;\n  margin: 20px;\n  height: 60px;\n  font-size: 16px;\n`;\n_c3 = ButtonContainer;\nconst Login = () => {\n  _s();\n  //as I did not have the access key I created a mockDB to validate the users credentials against\n  const mockDB = [{\n    nhsNumber: 111222333,\n    name: \"DOE, John\",\n    born: \"1/14/2005\"\n  }, {\n    nhsNumber: 111222333,\n    name: \"SMITH, Alice\",\n    born: \"25/03/1998\"\n  }, {\n    nhsNumber: 333444555,\n    name: \"CARTER, Bob\",\n    born: \"20/05/1977\"\n  }, {\n    nhsNumber: 444555666,\n    name: \"BOND, Charles\",\n    born: \"18/07/1953\"\n  }, {\n    nhsNumber: 555666777,\n    name: \"MAY, Megan\",\n    born: \"14/11/2009\"\n  }];\n  const [userDetails, setUserDetails] = useState({\n    nhsNumber: \"\",\n    name: \"\",\n    born: \"\"\n  });\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const navigate = useNavigate();\n\n  //the below function takes a string in the format Sun Jul 22 2018 01:00:00 GMT+0100 (British Summer Time) and converts it to MM/DD/YYY\n  function formatDate(dateString) {\n    const date = new Date(dateString);\n    const month = date.getMonth() + 1;\n    const day = date.getDate();\n    const year = date.getFullYear();\n    return `${month}/${day}/${year}`;\n  }\n  const handleChange = e => {\n    //using the inbuilt date input stored the date value on the valueAsDate key rather than value\n    if (e.target.name === \"born\") {\n      setUserDetails({\n        ...userDetails,\n        born: formatDate(e.target.valueAsDate)\n      });\n    } else {\n      setUserDetails({\n        ...userDetails,\n        [e.target.name]: e.target.value\n      });\n    }\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    const result2 = checkPatientDetails(userDetails.nhsNumber).then(res => {\n      console.log(res, \"**\");\n    }).catch(e => {\n      console.log(e, \"e here\");\n    });\n    console.log(result2);\n    const result = checkDetails(mockDB, userDetails);\n    //if the user details match then you navigate to the second page\n    if (result === \"Success\") {\n      navigate(\"/success\");\n    } else {\n      setErrorMessage(result);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: /*#__PURE__*/_jsxDEV(FormContainer, {\n      children: [/*#__PURE__*/_jsxDEV(FormInput, {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"NHS Number\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            name: \"nhsNumber\",\n            value: userDetails.nhsNumber,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Surname\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"name\",\n            value: userDetails.name,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Date of Birth\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            id: \"start\",\n            name: \"born\",\n            value: \"2000-01-01\",\n            min: \"1900-01-01\",\n            max: \"2023-03-20\",\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ButtonContainer, {\n        type: \"submit\",\n        children: \"Continue\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: errorMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 26\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"oPLq12iQELyJpXC5zg6V/kPU7LM=\", false, function () {\n  return [useNavigate];\n});\n_c4 = Login;\nexport default Login;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"FormContainer\");\n$RefreshReg$(_c2, \"FormInput\");\n$RefreshReg$(_c3, \"ButtonContainer\");\n$RefreshReg$(_c4, \"Login\");","map":{"version":3,"names":["useState","checkDetails","useNavigate","styled","checkPatientDetails","jsxDEV","_jsxDEV","FormContainer","div","_c","FormInput","_c2","ButtonContainer","button","_c3","Login","_s","mockDB","nhsNumber","name","born","userDetails","setUserDetails","errorMessage","setErrorMessage","navigate","formatDate","dateString","date","Date","month","getMonth","day","getDate","year","getFullYear","handleChange","e","target","valueAsDate","value","handleSubmit","preventDefault","result2","then","res","console","log","catch","result","onSubmit","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","id","min","max","_c4","$RefreshReg$"],"sources":["/Users/jonno/Projects/lifestyle-checker/src/components/Login.js"],"sourcesContent":["import { useState } from \"react\";\nimport { checkDetails } from \"../utils/utils\";\nimport { useNavigate } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { checkPatientDetails } from \"../utils/api\";\n\nconst FormContainer = styled.div`\n  border: 1px solid #1978c8;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  font-family: Frutiger W01, Arial, Sans-serif;\n  background-color: #f0f4f5;\n`;\n\nconst FormInput = styled.div`\n  display: contents;\n`;\n\nconst ButtonContainer = styled.button`\n  background-color: #007f3b;\n  color: white;\n  border-radius: 4px;\n  font-weight: 600;\n  box-shadow: 0 1px #00401e;\n  width: 150px;\n  margin: 20px;\n  height: 60px;\n  font-size: 16px;\n`;\n\nconst Login = () => {\n  //as I did not have the access key I created a mockDB to validate the users credentials against\n  const mockDB = [\n    { nhsNumber: 111222333, name: \"DOE, John\", born: \"1/14/2005\" },\n    { nhsNumber: 111222333, name: \"SMITH, Alice\", born: \"25/03/1998\" },\n    { nhsNumber: 333444555, name: \"CARTER, Bob\", born: \"20/05/1977\" },\n    { nhsNumber: 444555666, name: \"BOND, Charles\", born: \"18/07/1953\" },\n    { nhsNumber: 555666777, name: \"MAY, Megan\", born: \"14/11/2009\" },\n  ];\n\n  const [userDetails, setUserDetails] = useState({\n    nhsNumber: \"\",\n    name: \"\",\n    born: \"\",\n  });\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const navigate = useNavigate();\n\n  //the below function takes a string in the format Sun Jul 22 2018 01:00:00 GMT+0100 (British Summer Time) and converts it to MM/DD/YYY\n  function formatDate(dateString) {\n    const date = new Date(dateString);\n    const month = date.getMonth() + 1;\n    const day = date.getDate();\n    const year = date.getFullYear();\n    return `${month}/${day}/${year}`;\n  }\n\n  const handleChange = (e) => {\n    //using the inbuilt date input stored the date value on the valueAsDate key rather than value\n    if (e.target.name === \"born\") {\n      setUserDetails({\n        ...userDetails,\n        born: formatDate(e.target.valueAsDate),\n      });\n    } else {\n      setUserDetails({ ...userDetails, [e.target.name]: e.target.value });\n    }\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const result2 = checkPatientDetails(userDetails.nhsNumber)\n      .then((res) => {\n        console.log(res, \"**\");\n      })\n      .catch((e) => {\n        console.log(e, \"e here\");\n      });\n    console.log(result2);\n    const result = checkDetails(mockDB, userDetails);\n    //if the user details match then you navigate to the second page\n    if (result === \"Success\") {\n      navigate(\"/success\");\n    } else {\n      setErrorMessage(result);\n    }\n  };\n  return (\n    <form onSubmit={handleSubmit}>\n      <FormContainer>\n        <FormInput>\n          <label>NHS Number</label>\n          <div>\n            {/* type=number ensures only numbers are input*/}\n            <input\n              type=\"number\"\n              name=\"nhsNumber\"\n              value={userDetails.nhsNumber}\n              onChange={handleChange}\n            />\n          </div>\n        </FormInput>\n        <FormInput>\n          <label>Surname</label>\n          <div>\n            <input\n              type=\"text\"\n              name=\"name\"\n              value={userDetails.name}\n              onChange={handleChange}\n            />\n          </div>\n        </FormInput>\n        <FormInput>\n          {/* i used a type=date input here so that users cannot input the dob in the incorrect format*/}\n\n          <label>Date of Birth</label>\n          <div>\n            <input\n              type=\"date\"\n              id=\"start\"\n              name=\"born\"\n              value=\"2000-01-01\"\n              min=\"1900-01-01\"\n              max=\"2023-03-20\"\n              onChange={handleChange}\n            ></input>\n          </div>\n        </FormInput>\n\n        <ButtonContainer type=\"submit\">Continue</ButtonContainer>\n        {errorMessage && <p>{errorMessage}</p>}\n      </FormContainer>\n    </form>\n  );\n};\n\nexport default Login;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}